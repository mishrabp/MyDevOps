apiVersion: v1
kind: ConfigMap
metadata:
  name: strapi-api-configmap
  namespace: ns2022
data:
  MYNWAPP_ENV: development
  MYNWAPP_PORT: "8080"
  MYNWAPP_ERRORLOG: "true"
  MYNWAPP_TRACKINGLOG: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: strapi-api-secret
  namespace: ns2022
type: Opaque
data:
#  MYNWAPP_MONGO_URI: "mongodb://mongoadmin:passw0rd!@devopsmasterlinuxvm.centralus.cloudapp.azure.com:9003/northwind?authSource=admin&readPreference=primary&appname=MongoDB%20Compass&ssl=false"
#  MYNWAPP_SessionKey: sessionkey1
#  MYNWAPP_AuthTokenKey: authtoken1
#  MYNWAPP_GEOCODER_API_KEY: AIzaSyAFN7pm1QA20ojk8CA2tQnXzOHB1ryRGtM
#  base64 encoded values are set here
  MYNWAPP_MONGO_URI: bW9uZ29kYjovL21vbmdvYWRtaW46cGFzc3cwcmQhQGRldm9wc21hc3RlcmxpbnV4dm0uY2VudHJhbHVzLmNsb3VkYXBwLmF6dXJlLmNvbTo5MDAzL25vcnRod2luZD9hdXRoU291cmNlPWFkbWluJnJlYWRQcmVmZXJlbmNlPXByaW1hcnkmYXBwbmFtZT1Nb25nb0RCJTIwQ29tcGFzcyZzc2w9ZmFsc2U=
  MYNWAPP_SessionKey: c2Vzc2lvbmtleTE=
  MYNWAPP_AuthTokenKey: YXV0aHRva2VuMQ==
  MYNWAPP_GEOCODER_API_KEY: QUl6YVN5QUZON3BtMVFBMjBvams4Q0EydFFuWHpPSEIxcnlSR3RN

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: strapi-api
  namespace: ns2022
  labels:
    app: strapi-api
  annotations:
    description: "It's a MVC demo built on NodeJs"
    developer: "Bibhu Prasad Mishra"  
    email: "bibhup_mishra@yahoo.com"  
spec:
  replicas: 2
  selector:
    matchLabels:
      app: strapi-api-pod
      type: front-end
  template:
    metadata:
      labels:
        app: strapi-api-pod
        type: front-end
    spec:
      containers:
      - name: strapi-api-pod
        image: bibhupmishra/node-strapi-cms-api
#        envFrom:
#        - configMapRef:
#            name: strapi-api-configmap
#        - secretRef:
#            name: strapi-api-secret
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "1000m"
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /admin
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /admin
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 5
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions: 
#              - key: "nodejs"
#                operator: "In"
#                values: 
#                - "yes"
#              - key: "dotnetcore"
#                operator: "In"
#                values: 
#                - "yes"
      tolerations:
      - key: "app"
        operator: "Equal"
        value: "blue"
        effect: "NoExecute"
---
apiVersion: v1
kind: Service
metadata:
  name: strapi-api-svc
  namespace: ns2022
  labels:
    svc: strapi-api-svc
spec:
  #type: NodePort
  selector:
    app: strapi-api-pod
  ports:
  - port: 8080
    targetPort: 80
    #nodePort: 30090

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: strapi-api-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  namespace: ns2022
spec:
  rules:
  - host: "strapi.kube9t.com"
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: strapi-api-svc
            port:
              number: 8080


